#include <iostream>
#include <omp.h>
#include <string>

int main()
{
	#pragma omp parallel num_threads(8)
	{
		for (int i = 7; i >= 0; i--){
			#pragma omp barrier
			if (i == omp_get_thread_num()){
				printf("Hello world %d of %d \n", omp_get_thread_num(), omp_get_num_threads());
			}
		}
	}
}

// int main() {
//     int num_threads = 8;
//     omp_set_num_threads(8);

//     #pragma omp parallel num_threads(8)
//     {
//         int thread_id = omp_get_thread_num();

//         #pragma omp for ordered
//         for (int i = num_threads - 1; i >= 0; --i) {
//             #pragma omp ordered
        
//             std::cout << "Hello world " << i << " of " << num_threads << std::endl;
//         }
//     }

//     return 0;
// }


